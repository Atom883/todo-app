// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Organization {
  id                  String   @id @default(uuid())
  name                String
  clerkOrganizationId String   @unique
  users               User[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime?
}

model User {
  id             String   @id @default(uuid())
  username       String
  clerkUserId    String   @unique
  organization   Organization @relation(fields: [organizationId], references: [id])
  organizationId String

  images       Image[]
  generations  Generation[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime?

  @@index([organizationId])
  @@index([deletedAt])
  @@unique([username, organizationId]) // ① 組織内で username をユニークに
}

model Image {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  imageUrl  String   @unique                // ② URL 重複防止

  generations Generation[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime?

  @@index([userId])
  @@index([deletedAt])                       // ④
}

model Pose {
  id   Int     @id @default(autoincrement())
  name String  @unique

  generations Generation[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime?
}

model Video {
  id       String   @id @default(uuid())
  videoUrl String   @unique                // ②

  generations Generation[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime?
}

model Generation {
  id       String @id @default(uuid())

  user     User   @relation(fields: [userId], references: [id])
  userId   String
  image    Image  @relation(fields: [imageId], references: [id])
  imageId  String
  pose     Pose   @relation(fields: [poseId], references: [id])
  poseId   Int
  video    Video  @relation(fields: [videoId], references: [id])
  videoId  String               // ③ 一対一なら付ける、ここだけ聞く

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime?

  @@index([userId])
  @@index([imageId])
  @@index([poseId])
  @@index([videoId])
  @@index([deletedAt])                      // ④
}
